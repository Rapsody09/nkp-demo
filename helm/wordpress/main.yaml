---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: demo-wordpress
  labels:
    app: demo-wordpress
    environment: demo
spec:
  interval: 15s
  releaseName: demo-wordpress
  chart:
    spec:
      chart: wordpress
      sourceRef:
        kind: HelmRepository
        name: bitnami-custom
      version: "24.1.18"
  values:
    global:
      imageRegistry: "10.0.114.161:5000/library"
      security:
        allowInsecureImages: true
    
    # Configuration WordPress personnalis√©e
    wordpressUsername: erwann
    wordpressPassword: erwann
    wordpressBlogName: "Nutanix Kubernetes Platform Demo"
    
    # Scripts de personnalisation post-installation
    customPostInitScripts:
      setup-demo-theme.sh: |
        #!/bin/bash
        set -e
        echo "üöÄ D√©but de la personnalisation WordPress pour la d√©mo NKP..."
        
        # Attendre que WordPress soit compl√®tement install√©
        echo "‚è≥ Attente de l'installation compl√®te de WordPress..."
        for i in {1..60}; do
          if [ -f "/opt/bitnami/wordpress/wp-config.php" ] && \
             wp core is-installed --path=/opt/bitnami/wordpress --allow-root 2>/dev/null; then
            echo "‚úÖ WordPress est pr√™t ! (tentative $i/60)"
            break
          fi
          echo "‚è≥ WordPress pas encore pr√™t, attente... ($i/60)"
          sleep 5
        done
        
        # V√©rification finale
        if ! wp core is-installed --path=/opt/bitnami/wordpress --allow-root 2>/dev/null; then
          echo "‚ùå WordPress n'est toujours pas install√© apr√®s 5 minutes"
          echo "üîç Contenu du r√©pertoire /opt/bitnami/wordpress:"
          ls -la /opt/bitnami/wordpress/ || echo "R√©pertoire non accessible"
          exit 1
        fi
        
        echo "üé® Installation du th√®me Twenty Twenty-Four..."
        wp theme install twentytwentyfour --activate --allow-root --path=/opt/bitnami/wordpress || {
          echo "‚ö†Ô∏è √âchec installation th√®me, utilisation du th√®me par d√©faut"
        }
        
        # Cr√©er une page d'accueil personnalis√©e
        echo "üìù Cr√©ation de la page d'accueil personnalis√©e..."
        cat > /tmp/demo-homepage.html << 'EOF'
        <!-- wp:cover {"gradient":"vivid-cyan-blue-to-vivid-purple","align":"full","style":{"spacing":{"padding":{"top":"8rem","bottom":"8rem"}}}} -->
        <div class="wp-block-cover alignfull has-vivid-cyan-blue-to-vivid-purple-gradient-background has-background-dim" style="padding-top:8rem;padding-bottom:8rem">
          <div class="wp-block-cover__inner-container">
            <!-- wp:heading {"textAlign":"center","level":1,"style":{"typography":{"fontSize":"4rem","fontWeight":"700"},"color":{"text":"#ffffff"}}} -->
            <h1 class="wp-block-heading has-text-align-center" style="color:#ffffff;font-size:4rem;font-weight:700">üöÄ Nutanix Kubernetes Platform</h1>
            <!-- /wp:heading -->
            
            <!-- wp:heading {"textAlign":"center","level":2,"style":{"typography":{"fontSize":"1.5rem"},"color":{"text":"#ffffff"}}} -->
            <h2 class="wp-block-heading has-text-align-center" style="color:#ffffff;font-size:1.5rem">WordPress d√©ploy√© avec succ√®s !</h2>
            <!-- /wp:heading -->
          </div>
        </div>
        <!-- /wp:cover -->
        
  
        EOF
        
        # Cr√©er la page avec wp-cli
        echo "üè† Cr√©ation de la page d'accueil..."
        page_id=$(wp post create --post_type=page --post_title="Accueil Demo NKP" \
          --post_content="$(cat /tmp/demo-homepage.html)" \
          --post_status=publish --porcelain --allow-root --path=/opt/bitnami/wordpress)
        
        if [ -n "$page_id" ] && [ "$page_id" -gt 0 ]; then
          echo "üè† Configuration de la page d'accueil (ID: $page_id)..."
          wp option update show_on_front page --allow-root --path=/opt/bitnami/wordpress
          wp option update page_on_front $page_id --allow-root --path=/opt/bitnami/wordpress
        else
          echo "‚ö†Ô∏è √âchec de cr√©ation de la page d'accueil"
        fi
        
        # Personnaliser les options du site
        echo "‚öôÔ∏è Personnalisation des options WordPress..."
        wp option update blogdescription "D√©mo de d√©ploiement sur Nutanix Kubernetes Platform" --allow-root --path=/opt/bitnami/wordpress
        wp option update date_format "d/m/Y" --allow-root --path=/opt/bitnami/wordpress
        wp option update time_format "H:i" --allow-root --path=/opt/bitnami/wordpress
        wp option update start_of_week 1 --allow-root --path=/opt/bitnami/wordpress
        
        # D√©sactiver les commentaires par d√©faut
        wp option update default_comment_status closed --allow-root --path=/opt/bitnami/wordpress
        wp option update default_ping_status closed --allow-root --path=/opt/bitnami/wordpress
        
        echo "‚úÖ Personnalisation WordPress termin√©e avec succ√®s !"
        echo "üåü Page d'accueil configur√©e avec l'ID: $page_id"
    
    # Configuration WordPress corrig√©e
    wordpressExtraConfigContent: |
      // Configuration personnalis√©e pour la d√©mo (√©viter les doublons)
      if (!defined('WP_DEBUG')) {
          define('WP_DEBUG', false);
      }
      if (!defined('AUTOMATIC_UPDATER_DISABLED')) {
          define('AUTOMATIC_UPDATER_DISABLED', true);
      }
      if (!defined('WP_POST_REVISIONS')) {
          define('WP_POST_REVISIONS', 3);
      }
      
    # Labels et m√©tadonn√©es
    podLabels:
      app: demo-wordpress
      version: "24.1.18"
      component: cms
      environment: demo
    
    # Performances optimis√©es pour d√©mo
    replicaCount: 1
    
    # Base de donn√©es MySQL
    mysql:
      primary:
        persistence:
          enabled: true
          size: 8Gi
          storageClass: "nutanix-volume"
    
    # Persistance WordPress
    persistence:
      enabled: true
      size: 10Gi
      storageClass: "nutanix-volume"
    
    # Solution simple : Hook de nettoyage en 10 lignes
    extraDeploy:
    - apiVersion: batch/v1
      kind: Job
      metadata:
        name: cleanup-pvcs
        annotations:
          "helm.sh/hook": pre-delete
          "helm.sh/hook-delete-policy": before-hook-creation
      spec:
        template:
          spec:
            containers:
            - name: cleanup
              image: 10.0.114.161:5000/library/bitnami/kubectl:latest
              command: ['sh', '-c', 'kubectl delete pvc -l app.kubernetes.io/instance=demo-wordpress --ignore-not-found=true']
            restartPolicy: Never



